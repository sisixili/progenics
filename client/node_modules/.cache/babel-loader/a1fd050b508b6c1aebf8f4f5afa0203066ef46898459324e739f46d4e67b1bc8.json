{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sisix\\\\webdev\\\\progenics\\\\client\\\\src\\\\pages\\\\AllPatients.js\",\n  _s = $RefreshSig$();\n// This page contains the patient form\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllPatients() {\n  _s();\n  const [listOfForms, setListOfForms] = useState([]);\n  useEffect(() => {\n    // fetch always succeeds (besides network error), so need additional error checking\n    fetch(\"http://localhost:3001/forms\").then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        console.log(\"FETCH failed\");\n      }\n    }).then(data => setListOfForms(data)).catch(error => console.log(\"ERROR\", error));\n  }, []);\n  /*\r\n    function handleChange(event) {\r\n      console.log(event.target.value);\r\n      setName(event.target.value);\r\n    }\r\n    function checkName(patient) {\r\n      return patient.first_name.toLowerCase().includes(name.toLowerCase());\r\n    }\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), listOfForms.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", value.first_name, \" \", value.last_name]\n      }, value.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AllPatients, \"mYUrkQha+aG8wM+Bo51l22K0sQU=\");\n_c = AllPatients;\nexport default AllPatients;\nvar _c;\n$RefreshReg$(_c, \"AllPatients\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AllPatients","_s","listOfForms","setListOfForms","fetch","then","res","ok","json","console","log","data","catch","error","children","name","onChange","handleChange","fileName","_jsxFileName","lineNumber","columnNumber","map","value","index","first_name","last_name","id","_c","$RefreshReg$"],"sources":["C:/Users/sisix/webdev/progenics/client/src/pages/AllPatients.js"],"sourcesContent":["// This page contains the patient form\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction AllPatients() {\r\n  const [listOfForms, setListOfForms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // fetch always succeeds (besides network error), so need additional error checking\r\n    fetch(\"http://localhost:3001/forms\")\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"FETCH failed\");\r\n        }\r\n      })\r\n      .then((data) => setListOfForms(data))\r\n      .catch((error) => console.log(\"ERROR\", error));\r\n  }, []);\r\n/*\r\n  function handleChange(event) {\r\n    console.log(event.target.value);\r\n    setName(event.target.value);\r\n  }\r\n  function checkName(patient) {\r\n    return patient.first_name.toLowerCase().includes(name.toLowerCase());\r\n  }\r\n*/\r\n  return (\r\n    <div>\r\n      <input name=\"name\" onChange={handleChange} />\r\n\r\n     {listOfForms.map((value, index) => {\r\n        return <div key={value.id}> {value.first_name} {value.last_name}</div>;\r\n      })} \r\n\r\n      {/*listOfForms.filter(checkName).map((patient, index) => (\r\n        <h1 className=\"Name\">{patient.first_name} {patient.last_name}</h1>\r\n      ))*/}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllPatients;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,EAAE,EAAE;QACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;MACnB,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B;IACF,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAKR,cAAc,CAACQ,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEG,KAAK,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE7CnB,WAAW,CAACoB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAChC,oBAAOzB,OAAA;QAAAe,QAAA,GAAoB,GAAC,EAACS,KAAK,CAACE,UAAU,EAAC,GAAC,EAACF,KAAK,CAACG,SAAS;MAAA,GAA9CH,KAAK,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4C,CAAC;IACxE,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMC,CAAC;AAEV;AAACpB,EAAA,CAvCQD,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAyCpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}