{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sisix\\\\webdev\\\\progenics\\\\client\\\\src\\\\pages\\\\AllPatients.js\",\n  _s = $RefreshSig$();\n// This page contains the patient form\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllPatients() {\n  _s();\n  const [listOfForms, setListOfForms] = useState([]);\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    // fetch always succeeds (besides network error), so need additional error checking\n    fetch(\"http://localhost:3001/forms\", {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        console.log(\"FETCH failed\");\n      }\n    }).then(data => setListOfForms(data)).catch(error => console.log(\"ERROR\", error));\n  }, []);\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n  function checkName(patient) {\n    return patient.last_name.toLowerCase().includes(name.toLowerCase());\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of all patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"patient\",\n      onChange: handleChange,\n      placeholder: \"Search by Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), listOfForms.filter(checkName).map(patient => /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Name\",\n      children: [patient.first_name, \" \", patient.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n/*\r\n\r\n\r\n*/\n_s(AllPatients, \"1e/yrVjtXt/d2EBPVajYQRLUvrI=\");\n_c = AllPatients;\nexport default AllPatients;\nvar _c;\n$RefreshReg$(_c, \"AllPatients\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AllPatients","_s","listOfForms","setListOfForms","name","setName","fetch","headers","accessToken","sessionStorage","getItem","then","res","ok","json","console","log","data","catch","error","handleChange","event","target","value","checkName","patient","last_name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","filter","map","className","first_name","_c","$RefreshReg$"],"sources":["C:/Users/sisix/webdev/progenics/client/src/pages/AllPatients.js"],"sourcesContent":["// This page contains the patient form\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction AllPatients() {\r\n  const [listOfForms, setListOfForms] = useState([])\r\n  const [name, setName] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    // fetch always succeeds (besides network error), so need additional error checking\r\n    fetch(\"http://localhost:3001/forms\", {\r\n      headers: {\r\n        accessToken: sessionStorage.getItem(\"accessToken\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"FETCH failed\");\r\n        }\r\n      })\r\n      .then((data) => setListOfForms(data))\r\n      .catch((error) => console.log(\"ERROR\", error));\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  function checkName(patient) {\r\n    return patient.last_name.toLowerCase().includes(name.toLowerCase());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>List of all patients</h2>\r\n      <input name=\"patient\" onChange={handleChange} placeholder='Search by Last Name'/>\r\n      {listOfForms.filter(checkName).map((patient, ) => (\r\n        <h1 className=\"Name\">{patient.first_name} {patient.last_name}</h1>\r\n      ))}\r\n      \r\n    </div>\r\n  );\r\n}\r\n/*\r\n\r\n\r\n*/\r\n\r\nexport default AllPatients;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,6BAA6B,EAAE;MACnCC,OAAO,EAAE;QACPC,WAAW,EAAEC,cAAc,CAACC,OAAO,CAAC,aAAa;MACnD;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,EAAE,EAAE;QACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;MACnB,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B;IACF,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAKd,cAAc,CAACc,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEG,KAAK,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,YAAYA,CAACC,KAAK,EAAE;IAC3BhB,OAAO,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B;EAEA,SAASC,SAASA,CAACC,OAAO,EAAE;IAC1B,OAAOA,OAAO,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxB,IAAI,CAACuB,WAAW,CAAC,CAAC,CAAC;EACrE;EAEA,oBACE5B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BlC,OAAA;MAAOK,IAAI,EAAC,SAAS;MAAC8B,QAAQ,EAAEd,YAAa;MAACe,WAAW,EAAC;IAAqB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAChF/B,WAAW,CAACkC,MAAM,CAACZ,SAAS,CAAC,CAACa,GAAG,CAAEZ,OAAO,iBACzC1B,OAAA;MAAIuC,SAAS,EAAC,MAAM;MAAAT,QAAA,GAAEJ,OAAO,CAACc,UAAU,EAAC,GAAC,EAACd,OAAO,CAACC,SAAS;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV;AACA;AACA;AACA;AACA;AAHAhC,EAAA,CAzCSD,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}