{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sisix\\\\webdev\\\\progenics\\\\client\\\\src\\\\pages\\\\Patient.js\";\n// This page contains the patient form\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Patient() {\n  const initialValues = {\n    first_name: \"\",\n    last_name: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    first_name: Yup.string().min(2).max(50).required(),\n    // Want input to be a string, required, min 2 chars, max 50 chars\n    last_name: Yup.string().min(2).max(50).required()\n  });\n  const onSubmit = data => {\n    // send post req\n    //console.log(data);\n    fetch(\"http://localhost:3001/forms\", {\n      menthod: 'POST',\n      body: {\n        name\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FormPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"first_name\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputForm\",\n          name: \"first_name\" // Name must match db name // validationSchema={\" \"}\n          ,\n          placeholder: \"First Name Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"last_name\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputForm\",\n          name: \"last_name\" // Name must match db name // initialValues={\" \"} onSubmit={\" \"} validationSchema={\" \"}\n          ,\n          placeholder: \"Last Name Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = Patient;\nexport default Patient;\nvar _c;\n$RefreshReg$(_c, \"Patient\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","Patient","initialValues","first_name","last_name","validationSchema","object","shape","string","min","max","required","onSubmit","data","fetch","menthod","body","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","component","id","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/sisix/webdev/progenics/client/src/pages/Patient.js"],"sourcesContent":["// This page contains the patient form\r\nimport React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction Patient() {\r\n  const initialValues = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    first_name: Yup.string().min(2).max(50).required(), // Want input to be a string, required, min 2 chars, max 50 chars\r\n    last_name: Yup.string().min(2).max(50).required(),\r\n  });\r\n\r\n  const onSubmit = (data) => { // send post req\r\n    //console.log(data);\r\n    fetch(\"http://localhost:3001/forms\", {\r\n      menthod: 'POST',\r\n      body: {\r\n        name\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"FormPage\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <Form className=\"formContainer\">\r\n          <label>First Name: </label>\r\n          <ErrorMessage name=\"first_name\" component=\"span\" />{/* component that error is generated in */}\r\n          <Field\r\n            id=\"inputForm\"\r\n            name=\"first_name\" // Name must match db name // validationSchema={\" \"}\r\n            placeholder=\"First Name Here\"\r\n          />\r\n          <label>Last Name: </label>\r\n          <ErrorMessage name=\"last_name\" component=\"span\" />\r\n          <Field\r\n            id=\"inputForm\"\r\n            name=\"last_name\" // Name must match db name // initialValues={\" \"} onSubmit={\" \"} validationSchema={\" \"}\r\n            placeholder=\"Last Name Here\"\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}